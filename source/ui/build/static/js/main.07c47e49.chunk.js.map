{"version":3,"sources":["Components/FileSelector/FileSelector.tsx","Components/Uploader/Uploader.tsx","Components/Header/Header.tsx","App.tsx","index.tsx"],"names":["FileSelector","props","handleChange","event","onFileSelected","target","files","bind","Form","Group","File","id","label","custom","onChange","this","Component","Uploader","uploadFileRequest","a","response","fetch","uploadFile","setState","isLoading","msg","selectedFile","name","status","statusText","setToastState","state","showToast","toastBody","isShowing","Button","variant","disabled","size","block","onClick","style","position","bottom","right","Toast","onClose","show","delay","autohide","Header","className","Body","Container","Row","App","handleFileSelection","type","file","uploadFileUri","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAmCeA,E,kDAzBd,WAAYC,GAAY,IAAD,8BACtB,cAAMA,IAIPC,aAAe,SAACC,GACf,EAAKF,MAAMG,eAAeD,EAAME,OAAOC,MAAM,KAJ7C,EAAKJ,aAAe,EAAKA,aAAaK,KAAlB,gBAFE,E,0CASrB,WACA,OACD,8BACC,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,UACA,cAACD,EAAA,EAAKE,KAAN,CACGC,GAAG,cACHC,MAAM,+BACTC,QAAM,EACNC,SAAUC,KAAKb,yB,GAnBOc,a,iDCqEZC,E,kDA3Dd,WAAYhB,GAAY,IAAD,8BACtB,cAAMA,IAeCiB,kBAhBe,sBAgBK,4BAAAC,EAAA,6DAKvBC,EAAWC,MAAM,0BALM,kBAMpBD,GANoB,2CAhBL,EAyBbE,WAzBa,sBAyBA,8BAAAH,EAAA,6DACrB,EAAKI,SAAS,CAAEC,WAAW,IADN,kBAGD,EAAKN,oBAHJ,OAGlBE,EAHkB,OAIlBK,EAAM,EAAKxB,MAAMyB,aAAaC,KAAO,oBAAsBP,EAASQ,OAAS,KAAOR,EAASS,WACjG,EAAKC,eAAc,EAAML,GALH,uBAQtB,EAAKF,SAAS,CAAEC,WAAW,IARL,yEAvBtB,EAAKO,MAAQ,CACZP,WAAW,EACXQ,WAAW,EACXC,UAAW,IALU,E,iDASvB,SAAsBC,GAAqC,IAAlBT,EAAiB,uDAAH,GACtDV,KAAKQ,SAAS,CACbS,UAAWE,EACXD,UAAWR,M,oBAyBX,WAAU,IAAD,OACJC,EAAeX,KAAKd,MAAMyB,aAC1BM,EAAYjB,KAAKgB,MAAMC,UACvBC,EAAYlB,KAAKgB,MAAME,UAE3B,OACD,gCACC,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,SAAUtB,KAAKgB,MAAMP,UAAWc,KAAK,KAAKC,OAAK,EAACC,QAASzB,KAAKO,WAAxF,SACEP,KAAKgB,MAAMP,UAAY,aAAe,UAAYE,EAAaC,OAEjE,qBAAKc,MAAO,CAACC,SAAU,WAAYC,OAAQ,EAAGC,MAAO,GAArD,SACC,eAACC,EAAA,EAAD,CAAOC,QAAS,kBAAM,EAAKhB,eAAc,IAAQiB,KAAMf,EAAWgB,MAAO,IAAMC,UAAQ,EAAvF,UACC,cAACJ,EAAA,EAAMK,OAAP,UACC,wBAAQC,UAAU,UAAlB,6BAED,cAACN,EAAA,EAAMO,KAAP,UAAanB,gB,GArDIjB,a,wBCURkC,E,4JAdZ,WACC,OACD,eAACG,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,CAAKH,UAAU,0BAAf,SACD,4CAED,cAACG,EAAA,EAAD,CAAKH,UAAU,0BAAf,SACC,gEAED,8B,GAViBnC,aCuBNuC,E,kDAzBd,WAAYtD,GAAY,IAAD,8BACtB,cAAMA,IACDuD,oBAAsB,EAAKA,oBAAoBjD,KAAzB,gBAC3B,EAAKwB,MAAQ,CACZL,aAAc,IAAIhB,KAAK,CAAC,OAAQ,UAAW,CAAC+C,KAAM,gBAJ7B,E,uDAQvB,SAAoBC,GACnB3C,KAAKQ,SAAS,CAACG,aAAagC,M,oBAG3B,WAAU,IAAD,EACJhC,EAAeX,KAAKgB,MAAML,aAC1BiC,EAAa,UAAGC,yEAAH,EAAoC,mCAEvD,OACC,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAclC,aAAcX,KAAKgB,MAAML,aAActB,eAAgBW,KAAKyC,sBACnD,YAAtB9B,EAAaC,MAAsB,cAAC,EAAD,CAAUD,aAAcX,KAAKgB,MAAML,aAAciC,cAAeA,W,GArBtF3C,aCJlB6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACV,EAAA,EAAD,UACE,cAAC,EAAD,QAGJW,SAASC,eAAe,W","file":"static/js/main.07c47e49.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './FileSelector.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ninterface iFileSelector {\r\n\tselectedFile: File,\r\n}\r\n\r\nclass FileSelector extends Component<any,iFileSelector> {\r\n\tconstructor(props:any) {\r\n\t\tsuper(props);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange = (event:any) => {\r\n\t\tthis.props.onFileSelected(event.target.files[0]);\r\n\t};\r\n  \t\r\n  \trender() {\r\n\t  return ( \r\n\t\t<div>\r\n\t\t\t<Form>\r\n\t\t\t  <Form.Group> \r\n\t\t\t \t<Form.File \r\n\t\t\t    \tid=\"custom-file\"\r\n\t\t\t\t    label=\"Select Podcast to Transcribe\" \r\n\t\t\t\t\tcustom \r\n\t\t\t\t\tonChange={this.handleChange}/>\r\n\t\t\t  </Form.Group>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n  \t);\r\n  }\r\n}\r\nexport default FileSelector;\r\n","import React, { Component } from 'react';\r\nimport './Uploader.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\ntype Props = {\r\n\tselectedFile: File,\r\n\tuploadFileUri: string\r\n}\r\n\r\ntype State = {\r\n\tisLoading: boolean,\r\n\tshowToast: boolean,\r\n\ttoastBody: string\r\n}\r\n\r\nclass Uploader extends Component<Props,State> {\r\n\tconstructor(props:any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: false,\r\n\t\t\tshowToast: false,\r\n\t\t\ttoastBody: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setToastState(isShowing:boolean, msg: string = \"\"){\r\n\t\tthis.setState({\r\n\t\t\tshowToast: isShowing,\r\n\t\t\ttoastBody: msg\r\n\t\t})\r\n\t}\r\n\r\n\tprivate uploadFileRequest = async () => {\r\n\t\t/*const response = await fetch(this.props.uploadFileUri, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: this.props.selectedFile\r\n\t\t});*/\r\n\t\tlet response = fetch(\"http://localhost:3000/\");\r\n\t\treturn response;\r\n\t}\r\n\r\n  \tprivate uploadFile = async () => {\r\n\t  this.setState({ isLoading: true })\r\n\t  try{\r\n\t\tvar response = await this.uploadFileRequest();\r\n\t\tvar msg = this.props.selectedFile.name + \" upload status - \" + response.status + \": \" + response.statusText;\r\n\t\tthis.setToastState(true, msg);\r\n\t  }\r\n\t  finally {\r\n\t\tthis.setState({ isLoading: false })\r\n\t  }\r\n  \t}\r\n\r\n  \trender() {\r\n\t\tconst selectedFile = this.props.selectedFile;\r\n\t\tconst showToast = this.state.showToast;\r\n\t\tconst toastBody = this.state.toastBody;\r\n\r\n\t  \treturn ( \r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"primary\" disabled={this.state.isLoading} size=\"lg\" block onClick={this.uploadFile} >\r\n\t\t\t\t\t{this.state.isLoading ? 'Uploading ' : 'Upload ' + selectedFile.name }\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div style={{position: 'absolute', bottom: 0, right: 0}} >\r\n\t\t\t\t\t<Toast onClose={() => this.setToastState(false)} show={showToast} delay={3000} autohide >\r\n\t\t\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t\t\t<strong className=\"mr-auto\">Upload Status</strong>\r\n\t\t\t\t\t\t</Toast.Header>\r\n\t\t\t\t\t\t<Toast.Body>{toastBody}</Toast.Body>\r\n\t\t\t\t\t</Toast>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n  \t\t);\r\n  \t}\r\n}\r\nexport default Uploader;\r\n","import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ntype Props = {\r\n}\r\n\r\ntype State = {\r\n}\r\n\r\nclass Header extends Component<Props,State> {\r\n  \trender() {\r\n\t  \treturn ( \r\n\t\t\t<Container>\r\n  \t\t\t\t<Row className=\"justify-content-md-left\">\r\n\t\t\t\t\t<h1>Tradiure</h1>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"justify-content-md-left\">\r\n\t\t\t\t\t<em>A podcast transcription site</em>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<hr/>\r\n\t\t\t</Container>\r\n  \t\t);\r\n  \t}\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport FileSelector from './Components/FileSelector/FileSelector'\r\nimport Uploader from './Components/Uploader/Uploader';\r\nimport Header from './Components/Header/Header';\r\n\r\ninterface iApp {\r\n\tselectedFile: File\r\n}\r\n\r\nclass App extends Component<any, iApp> {\r\n\tconstructor(props:any) {\r\n\t\tsuper(props);\r\n\t\tthis.handleFileSelection = this.handleFileSelection.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tselectedFile: new File([\"foo\"], \"foo.txt\", {type: \"text/plain\"}) \r\n\t\t};\r\n\t}\r\n\t\r\n\thandleFileSelection(file:File) {\r\n\t\tthis.setState({selectedFile:file});\r\n\t}\r\n\t\r\n  \trender() {\r\n\t\tconst selectedFile = this.state.selectedFile;\r\n\t\tconst uploadFileUri = process.env.REACT_APP_APP_URI ?? \"http://localhost:3000/api/upload\";\r\n\t\t\r\n\t\treturn ( \r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<FileSelector selectedFile={this.state.selectedFile} onFileSelected={this.handleFileSelection} />\r\n\t\t\t\t{selectedFile.name !== \"foo.txt\" && <Uploader selectedFile={this.state.selectedFile} uploadFileUri={uploadFileUri} /> }\r\n\t\t\t</div>\r\n  \t\t);\r\n  \t}\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Container>\r\n      <App />\r\n    </Container>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}