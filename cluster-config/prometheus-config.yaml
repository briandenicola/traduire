apiVersion: v1
kind: ConfigMap
metadata:
  name: ama-metrics-prometheus-config-node
  namespace: kube-system
data:
  prometheus-config: |- 
      global:
        scrape_interval: 15s
      
      scrape_configs:
        - job_name: 'kubernetes-pods'
          kubernetes_sd_configs:
          - role: pod

          relabel_configs:
          # Scrape only pods with the annotation: prometheus.io/scrape = true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true

          # If prometheus.io/path is specified, scrape this path instead of /metrics
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

          # If prometheus.io/port is specified, scrape this port instead of the default
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

          # If prometheus.io/scheme is specified, scrape with this scheme instead of http
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: replace
            regex: (http|https)
            target_label: __scheme__

          # Include the pod namespace as a label for each metric
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace

          # Include the pod name as a label for each metric
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

          # [Optional] Include all pod labels as labels for each metric
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
  # prometheus-config: "global:\n  scrape_interval: 15s\n  \nscrape_configs:\n  - job_name:
  #   'kubernetes-pods'\n    kubernetes_sd_configs:\n    - role: pod\n\n    relabel_configs:\n
  #   \   # Scrape only pods with the annotation: prometheus.io/scrape = true\n    -
  #   source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n      action:
  #   keep\n      regex: true\n\n    # If prometheus.io/path is specified, scrape this
  #   path instead of /metrics\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n
  #   \     action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n\n
  #   \   # If prometheus.io/port is specified, scrape this port instead of the default\n
  #   \   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n
  #   \     action: replace\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement:
  #   $1:$2\n      target_label: __address__\n\n    # If prometheus.io/scheme is specified,
  #   scrape with this scheme instead of http\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n
  #   \     action: replace\n      regex: (http|https)\n      target_label: __scheme__\n\n
  #   \   # Include the pod namespace as a label for each metric\n    - source_labels:
  #   [__meta_kubernetes_namespace]\n      action: replace\n      target_label: kubernetes_namespace\n\n
  #   \   # Include the pod name as a label for each metric\n    - source_labels: [__meta_kubernetes_pod_name]\n
  #   \     action: replace\n      target_label: kubernetes_pod_name\n\n    # [Optional]
  #   Include all pod labels as labels for each metric\n    - action: labelmap\n      regex:
  #   __meta_kubernetes_pod_label_(.+)"
--- 
kind: ConfigMap
apiVersion: v1
data:
  schema-version:
    v1
  config-version:
    ver1
  prometheus-collector-settings: |-
    cluster_alias = ""
  default-scrape-settings-enabled: |-
    kubelet = true
    coredns = false
    cadvisor = true
    kubeproxy = false
    apiserver = false
    kubestate = true
    nodeexporter = true
    kappiebasic = true
    networkobservabilityRetina = true
    networkobservabilityHubble = true
    networkobservabilityCilium = true
    prometheuscollectorhealth = false
    controlplane-apiserver = true
    controlplane-cluster-autoscaler = false
    controlplane-kube-scheduler = false
    controlplane-kube-controller-manager = false
    controlplane-etcd = true
  pod-annotation-based-scraping: |-
    podannotationnamespaceregex = ".*"
  default-targets-metrics-keep-list: |-
    kubelet = ""
    coredns = ""
    cadvisor = ""
    kubeproxy = ""
    apiserver = ""
    kubestate = ""
    nodeexporter = ""
    windowsexporter = ""
    windowskubeproxy = ""
    podannotations = ""
    kappiebasic = ""
    networkobservabilityRetina = ""
    networkobservabilityHubble = ""
    networkobservabilityCilium = ""
    controlplane-apiserver = ""
    controlplane-cluster-autoscaler = ""
    controlplane-kube-scheduler = ""
    controlplane-kube-controller-manager = ""
    controlplane-etcd = ""
    minimalingestionprofile = false
  default-targets-scrape-interval-settings: |-
    kubelet = "30s"
    coredns = "30s"
    cadvisor = "30s"
    kubeproxy = "30s"
    apiserver = "30s"
    kubestate = "30s"
    nodeexporter = "30s"
    windowsexporter = "30s"
    windowskubeproxy = "30s"
    kappiebasic = "30s"
    networkobservabilityRetina = "30s"
    networkobservabilityHubble = "30s"
    networkobservabilityCilium = "30s"
    prometheuscollectorhealth = "30s"
    podannotations = "30s"
  debug-mode: |-
    enabled = false
metadata:
  name: ama-metrics-settings-configmap
  namespace: kube-system